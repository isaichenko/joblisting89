<!-- Titlebar
================================================== -->
<div id="titlebar" class="photo-bg header-image-recruiter">
  <div class="container">

    <div class="sixteen columns">
      <% if current_user.has_roles?(:superadmin) %>
        <h2>Checkout</h2>
      <% else %>
        <h2><i class="fa fa-list"></i> Your Jobs List</h2>
      <% end %>
    </div>

  </div>
</div>
<script src="https://www.paypal.com/sdk/js?client-id=<%= ENV['PAYPAL_CLIENT_ID'] %>"></script>
<script src="https://js.stripe.com/v3/"></script>

<scirpt src="https://www.paypalobjects.com/api/checkout.js"></scirpt>
<div class="container">

    <div style="width: 100%; height:100px; border-radius:3px; margin-top: 100px;">

      <div class="eight columns" style="text-align:center">
        <div class="two columns" style="margin-left: 45%;">
          <div id="paypal-button-container" style="width: 0"></div>
        </div>

      </div>


      <div class="eight columns" style="text-align:center">
        <form action="/your-server-side-code" method="POST">
          <script src="https://checkout.stripe.com/checkout.js"
                  class="stripe-button"
                  data-key="pk_Fhlzwtm9SCx6Uxww5fNXX8CUbwwAc"
                  data-amount="2000"
                  data-name="Job Listing"
                  data-description="2 widgets ($20.00)"
                  data-image="https://stripe.com/img/documentation/checkout/marketplace.png">
          </script>
          <script>
              // Hide default stripe button, be careful there if you
              // have more than 1 button of that class
              document.getElementsByClassName("stripe-button-el")[0].style.display = 'none';
          </script>
          <button type="submit" class="button green" style="font-size: 18px;font-family: 'Times New Roman', Times, serif;font-style: italic;
              border-radius: 21px;
              width: 25%;
              height: 42px;
          ">Stripe</button>
        </form>
      </div>

    </div>




</div>

<script>
    paypal.Buttons({
        style: {
            layout: 'horizontal',
            size: 'small',
            color:  'blue',
            shape:  'pill',
            label:  'pay',
            height: 40,
            tagline: 'false'
        },
        createOrder: function(data, actions) {
            return actions.order.create({
                purchase_units: [{
                    amount: {
                        value: '0.01'
                    }
                }]
            });
        },
        onApprove: function(data, actions) {
            return actions.order.capture().then(function(details) {
                alert('Transaction completed by ' + details.payer.name.given_name);
                // Call your server to save the transaction
                return fetch('/paypal-transaction-complete', {
                    method: 'post',
                    body: JSON.stringify({
                        orderID: data.orderID
                    })
                });
            });
        }
    }).render('#paypal-button-container');






    // var stripe = Stripe('pk_test_rEoQAIK4qDXjYCOlh3MFgDit');
    // console.log(stripe);
    //
    // var paymentRequest = stripe.paymentRequest({
    //     country: 'US',
    //     currency: 'usd',
    //     total: {
    //         label: 'Demo total',
    //         amount: 1000,
    //     },
    //     requestPayerName: true,
    //     requestPayerEmail: true,
    // });
    //
    // var elements = stripe.elements();
    // var prButton = elements.create('paymentRequestButton', {
    //     paymentRequest: paymentRequest,
    // });
    //
    //
    //
    // // Custom styling can be passed to options when creating an Element.
    // var style = {
    //     base: {
    //         // Add your base input styles here. For example:
    //         fontSize: '16px',
    //         color: "#32325d",
    //     }
    // };
    //
    // // Create an instance of the card Element.
    // var card = elements.create('card', {style: style});
    //
    // // Add an instance of the card Element into the `card-element` <div>.
    // card.mount('#card-element');
    //
    //
    //
    // card.addEventListener('change', function(event) {
    //     var displayError = document.getElementById('card-errors');
    //     if (event.error) {
    //         displayError.textContent = event.error.message;
    //     } else {
    //         displayError.textContent = '';
    //     }
    // });
    //
    //
    // // Create a token or display an error when the form is submitted.
    // var form = document.getElementById('payment-form');
    // form.addEventListener('submit', function(event) {
    //     event.preventDefault();
    //
    //     stripe.createToken(card).then(function(result) {
    //         if (result.error) {
    //             // Inform the customer that there was an error.
    //             var errorElement = document.getElementById('card-errors');
    //             errorElement.textContent = result.error.message;
    //         } else {
    //             // Send the token to your server.
    //             stripeTokenHandler(result.token);
    //         }
    //     });
    // });
    //
    //
    //
    // // Check the availability of the Payment Request API first.
    // paymentRequest.canMakePayment().then(function(result) {
    //     if (result) {
    //         prButton.mount('#payment-request-button');
    //     } else {
    //         document.getElementById('payment-request-button').style.display = 'none';
    //     }
    // });

</script>